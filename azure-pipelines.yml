# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
  # Do not build branches
  branches:
    exclude:
      - "*"
  # Run build on tagged versions
  tags:
    include:
      - "v*"

# Run builds for PRs against `master`
pr:
  - master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: GoTool@0
  inputs:
    version: '1.13'

- script: |
    set -x
    apt-get update
    apt-get install zip -y
    go version
    go get -v -t -d ./...
  displayName: 'Get dependencies'

- script: |
    set -x
    # etcd depdendency bug workaround. See commends in go.mod for more details.
    go build -v .
    sudo rm /home/vsts/go/pkg/mod/github.com/coreos/etcd@v3.3.10+incompatible/client/keys.generated.go
    go test -v ./...
  displayName: 'Run tests'

- script: |
    set -x
    mkdir dist && cd dist
    env GOOS=windows GOARCH=amd64 go build -v -o ./dce ..
    zip -m dce_windows_amd64.zip ./dce
    env GOOS=linux GOARCH=amd64 go build -v -o ./dce ..
    zip -m dce_linux_amd64.zip ./dce
    env GOOS=darwin GOARCH=amd64 go build -v -o ./dce ..
    zip -m dce_darwin_amd64.zip ./dce
  displayName: 'Build and zip'

- script: |
    set -x
    TagName=$(git describe --abbrev=0)
    echo "##vso[task.setvariable variable=TagName;isOutput=true]$TagName"
  displayName: 'Retrieve Git Tag Name'
  name: 'getTag'


# Publish a Github Release for tagged commits
# See https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/github-release?view=azure-devops
- task: GithubRelease@0
  displayName: 'Create GitHub Release'
  inputs:
    action: create
    tagSource: 'auto'
    title: $(getTag.TagName)
    gitHubConnection: Github
    repositoryName: Optum/dce-cli
    isDraft: true
    assets: |
      ./dist/*