// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"

// Terraformer is an autogenerated mock type for the Terraformer type
type Terraformer struct {
	mock.Mock
}

// Apply provides a mock function with given fields: ctx, tfVars
func (_m *Terraformer) Apply(ctx context.Context, tfVars []string) error {
	ret := _m.Called(ctx, tfVars)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []string) error); ok {
		r0 = rf(ctx, tfVars)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetOutput provides a mock function with given fields: ctx, key
func (_m *Terraformer) GetOutput(ctx context.Context, key string) (string, error) {
	ret := _m.Called(ctx, key)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, key)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Init provides a mock function with given fields: ctx, args
func (_m *Terraformer) Init(ctx context.Context, args []string) error {
	ret := _m.Called(ctx, args)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []string) error); ok {
		r0 = rf(ctx, args)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
