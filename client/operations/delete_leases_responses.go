// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteLeasesReader is a Reader for the DeleteLeases structure.
type DeleteLeasesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLeasesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDeleteLeasesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteLeasesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteLeasesCreated creates a DeleteLeasesCreated with default headers values
func NewDeleteLeasesCreated() *DeleteLeasesCreated {
	return &DeleteLeasesCreated{}
}

/*DeleteLeasesCreated handles this case with default header values.

Lease successfully removed
*/
type DeleteLeasesCreated struct {
	AccessControlAllowHeaders string

	AccessControlAllowMethods string

	AccessControlAllowOrigin string
}

func (o *DeleteLeasesCreated) Error() string {
	return fmt.Sprintf("[DELETE /leases][%d] deleteLeasesCreated ", 201)
}

func (o *DeleteLeasesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Access-Control-Allow-Headers
	o.AccessControlAllowHeaders = response.GetHeader("Access-Control-Allow-Headers")

	// response header Access-Control-Allow-Methods
	o.AccessControlAllowMethods = response.GetHeader("Access-Control-Allow-Methods")

	// response header Access-Control-Allow-Origin
	o.AccessControlAllowOrigin = response.GetHeader("Access-Control-Allow-Origin")

	return nil
}

// NewDeleteLeasesForbidden creates a DeleteLeasesForbidden with default headers values
func NewDeleteLeasesForbidden() *DeleteLeasesForbidden {
	return &DeleteLeasesForbidden{}
}

/*DeleteLeasesForbidden handles this case with default header values.

Failed to authenticate request
*/
type DeleteLeasesForbidden struct {
}

func (o *DeleteLeasesForbidden) Error() string {
	return fmt.Sprintf("[DELETE /leases][%d] deleteLeasesForbidden ", 403)
}

func (o *DeleteLeasesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*DeleteLeasesBody delete leases body
swagger:model DeleteLeasesBody
*/
type DeleteLeasesBody struct {

	// account Id
	// Required: true
	AccountID *string `json:"accountId"`

	// principal Id
	// Required: true
	PrincipalID *string `json:"principalId"`
}

// Validate validates this delete leases body
func (o *DeleteLeasesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccountID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrincipalID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteLeasesBody) validateAccountID(formats strfmt.Registry) error {

	if err := validate.Required("lease"+"."+"accountId", "body", o.AccountID); err != nil {
		return err
	}

	return nil
}

func (o *DeleteLeasesBody) validatePrincipalID(formats strfmt.Registry) error {

	if err := validate.Required("lease"+"."+"principalId", "body", o.PrincipalID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteLeasesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteLeasesBody) UnmarshalBinary(b []byte) error {
	var res DeleteLeasesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
