// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// PutAccountsIDReader is a Reader for the PutAccountsID structure.
type PutAccountsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAccountsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutAccountsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPutAccountsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutAccountsIDOK creates a PutAccountsIDOK with default headers values
func NewPutAccountsIDOK() *PutAccountsIDOK {
	return &PutAccountsIDOK{}
}

/*PutAccountsIDOK handles this case with default header values.

Account Details
*/
type PutAccountsIDOK struct {
	AccessControlAllowHeaders string

	AccessControlAllowMethods string

	AccessControlAllowOrigin string
}

func (o *PutAccountsIDOK) Error() string {
	return fmt.Sprintf("[PUT /accounts/{id}][%d] putAccountsIdOK ", 200)
}

func (o *PutAccountsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Access-Control-Allow-Headers
	o.AccessControlAllowHeaders = response.GetHeader("Access-Control-Allow-Headers")

	// response header Access-Control-Allow-Methods
	o.AccessControlAllowMethods = response.GetHeader("Access-Control-Allow-Methods")

	// response header Access-Control-Allow-Origin
	o.AccessControlAllowOrigin = response.GetHeader("Access-Control-Allow-Origin")

	return nil
}

// NewPutAccountsIDForbidden creates a PutAccountsIDForbidden with default headers values
func NewPutAccountsIDForbidden() *PutAccountsIDForbidden {
	return &PutAccountsIDForbidden{}
}

/*PutAccountsIDForbidden handles this case with default header values.

Forbidden
*/
type PutAccountsIDForbidden struct {
}

func (o *PutAccountsIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /accounts/{id}][%d] putAccountsIdForbidden ", 403)
}

func (o *PutAccountsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PutAccountsIDBody put accounts ID body
swagger:model PutAccountsIDBody
*/
type PutAccountsIDBody struct {

	// ARN for an IAM role within this AWS account. The DCE master account will assume this IAM role to execute operations within this AWS account. This IAM role is configured by the client, and must be configured with [a Trust Relationship with the DCE master account.](/https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html)
	//
	AdminRoleArn string `json:"adminRoleArn,omitempty"`

	// Arbitrary metadata to attach to the account object.
	Metadata interface{} `json:"metadata,omitempty"`
}

// Validate validates this put accounts ID body
func (o *PutAccountsIDBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutAccountsIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutAccountsIDBody) UnmarshalBinary(b []byte) error {
	var res PutAccountsIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
