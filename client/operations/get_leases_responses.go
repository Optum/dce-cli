// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetLeasesReader is a Reader for the GetLeases structure.
type GetLeasesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLeasesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLeasesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetLeasesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLeasesOK creates a GetLeasesOK with default headers values
func NewGetLeasesOK() *GetLeasesOK {
	return &GetLeasesOK{}
}

/*GetLeasesOK handles this case with default header values.

OK
*/
type GetLeasesOK struct {
	AccessControlAllowHeaders string

	AccessControlAllowMethods string

	AccessControlAllowOrigin string
	/*Appears only when there is another page of results in the query. The value contains the URL for the next page of the results and follows the `<url>; rel="next"` convention.
	 */
	Link string

	Payload []*GetLeasesOKBodyItems0
}

func (o *GetLeasesOK) Error() string {
	return fmt.Sprintf("[GET /leases][%d] getLeasesOK  %+v", 200, o.Payload)
}

func (o *GetLeasesOK) GetPayload() []*GetLeasesOKBodyItems0 {
	return o.Payload
}

func (o *GetLeasesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Access-Control-Allow-Headers
	o.AccessControlAllowHeaders = response.GetHeader("Access-Control-Allow-Headers")

	// response header Access-Control-Allow-Methods
	o.AccessControlAllowMethods = response.GetHeader("Access-Control-Allow-Methods")

	// response header Access-Control-Allow-Origin
	o.AccessControlAllowOrigin = response.GetHeader("Access-Control-Allow-Origin")

	// response header Link
	o.Link = response.GetHeader("Link")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLeasesForbidden creates a GetLeasesForbidden with default headers values
func NewGetLeasesForbidden() *GetLeasesForbidden {
	return &GetLeasesForbidden{}
}

/*GetLeasesForbidden handles this case with default header values.

Failed to authenticate request
*/
type GetLeasesForbidden struct {
}

func (o *GetLeasesForbidden) Error() string {
	return fmt.Sprintf("[GET /leases][%d] getLeasesForbidden ", 403)
}

func (o *GetLeasesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetLeasesOKBodyItems0 Lease Details
swagger:model GetLeasesOKBodyItems0
*/
type GetLeasesOKBodyItems0 struct {

	// accountId of the AWS account
	AccountID string `json:"accountId,omitempty"`

	// budget amount
	BudgetAmount float64 `json:"budgetAmount,omitempty"`

	// budget currency
	BudgetCurrency string `json:"budgetCurrency,omitempty"`

	// budget notification emails
	BudgetNotificationEmails []string `json:"budgetNotificationEmails"`

	// creation date in epoch seconds
	CreatedOn float64 `json:"createdOn,omitempty"`

	// Lease ID
	ID string `json:"id,omitempty"`

	// date last modified in epoch seconds
	LastModifiedOn float64 `json:"lastModifiedOn,omitempty"`

	// Status of the Lease.
	// "Active": The principal is leased and has access to the account
	// "Decommissioned": The principal was previously leased to the account, but now is not.
	// "FinanceLock": The principal is leased to the account, but has hit a budget threshold, and is locked out of the account.
	// "ResetLock": The principal is leased to the account, but the account is being reset. The principal's access is temporarily revoked, and will be given back after the reset process is complete.
	// "ResetFinanceLock": The principal is leased to the account, but has been locked out for hitting a budget threshold. Additionally, the account is being reset. After reset, the principal's access will _not_ be restored, and the LeaseStatus will be set back to `ResetLock`.
	//
	// Enum: [Active Decommissioned FinanceLock ResetLock ResetFinanceLock]
	LeaseStatus string `json:"leaseStatus,omitempty"`

	// date lease status was last modified in epoch seconds
	LeaseStatusModifiedOn float64 `json:"leaseStatusModifiedOn,omitempty"`

	// principalId of the lease to get
	PrincipalID string `json:"principalId,omitempty"`

	// date lease should expire in epoch seconds
	RequestedLeaseEnd float64 `json:"requestedLeaseEnd,omitempty"`
}

// Validate validates this get leases o k body items0
func (o *GetLeasesOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLeaseStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getLeasesOKBodyItems0TypeLeaseStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Active","Decommissioned","FinanceLock","ResetLock","ResetFinanceLock"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getLeasesOKBodyItems0TypeLeaseStatusPropEnum = append(getLeasesOKBodyItems0TypeLeaseStatusPropEnum, v)
	}
}

const (

	// GetLeasesOKBodyItems0LeaseStatusActive captures enum value "Active"
	GetLeasesOKBodyItems0LeaseStatusActive string = "Active"

	// GetLeasesOKBodyItems0LeaseStatusDecommissioned captures enum value "Decommissioned"
	GetLeasesOKBodyItems0LeaseStatusDecommissioned string = "Decommissioned"

	// GetLeasesOKBodyItems0LeaseStatusFinanceLock captures enum value "FinanceLock"
	GetLeasesOKBodyItems0LeaseStatusFinanceLock string = "FinanceLock"

	// GetLeasesOKBodyItems0LeaseStatusResetLock captures enum value "ResetLock"
	GetLeasesOKBodyItems0LeaseStatusResetLock string = "ResetLock"

	// GetLeasesOKBodyItems0LeaseStatusResetFinanceLock captures enum value "ResetFinanceLock"
	GetLeasesOKBodyItems0LeaseStatusResetFinanceLock string = "ResetFinanceLock"
)

// prop value enum
func (o *GetLeasesOKBodyItems0) validateLeaseStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getLeasesOKBodyItems0TypeLeaseStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetLeasesOKBodyItems0) validateLeaseStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.LeaseStatus) { // not required
		return nil
	}

	// value enum
	if err := o.validateLeaseStatusEnum("leaseStatus", "body", o.LeaseStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetLeasesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetLeasesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetLeasesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
