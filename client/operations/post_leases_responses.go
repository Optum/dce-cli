// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// PostLeasesReader is a Reader for the PostLeases structure.
type PostLeasesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLeasesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostLeasesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostLeasesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostLeasesCreated creates a PostLeasesCreated with default headers values
func NewPostLeasesCreated() *PostLeasesCreated {
	return &PostLeasesCreated{}
}

/*PostLeasesCreated handles this case with default header values.

Lease Details
*/
type PostLeasesCreated struct {
	AccessControlAllowHeaders string

	AccessControlAllowMethods string

	AccessControlAllowOrigin string
}

func (o *PostLeasesCreated) Error() string {
	return fmt.Sprintf("[POST /leases][%d] postLeasesCreated ", 201)
}

func (o *PostLeasesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Access-Control-Allow-Headers
	o.AccessControlAllowHeaders = response.GetHeader("Access-Control-Allow-Headers")

	// response header Access-Control-Allow-Methods
	o.AccessControlAllowMethods = response.GetHeader("Access-Control-Allow-Methods")

	// response header Access-Control-Allow-Origin
	o.AccessControlAllowOrigin = response.GetHeader("Access-Control-Allow-Origin")

	return nil
}

// NewPostLeasesForbidden creates a PostLeasesForbidden with default headers values
func NewPostLeasesForbidden() *PostLeasesForbidden {
	return &PostLeasesForbidden{}
}

/*PostLeasesForbidden handles this case with default header values.

Failed to authenticate request
*/
type PostLeasesForbidden struct {
}

func (o *PostLeasesForbidden) Error() string {
	return fmt.Sprintf("[POST /leases][%d] postLeasesForbidden ", 403)
}

func (o *PostLeasesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostLeasesBody post leases body
swagger:model PostLeasesBody
*/
type PostLeasesBody struct {

	// budget amount
	// Required: true
	BudgetAmount *float64 `json:"budgetAmount"`

	// budget currency
	// Required: true
	BudgetCurrency *string `json:"budgetCurrency"`

	// budget notification emails
	// Required: true
	BudgetNotificationEmails []string `json:"budgetNotificationEmails"`

	// principal Id
	// Required: true
	PrincipalID *string `json:"principalId"`
}

// Validate validates this post leases body
func (o *PostLeasesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBudgetAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBudgetCurrency(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBudgetNotificationEmails(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrincipalID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostLeasesBody) validateBudgetAmount(formats strfmt.Registry) error {

	if err := validate.Required("lease"+"."+"budgetAmount", "body", o.BudgetAmount); err != nil {
		return err
	}

	return nil
}

func (o *PostLeasesBody) validateBudgetCurrency(formats strfmt.Registry) error {

	if err := validate.Required("lease"+"."+"budgetCurrency", "body", o.BudgetCurrency); err != nil {
		return err
	}

	return nil
}

func (o *PostLeasesBody) validateBudgetNotificationEmails(formats strfmt.Registry) error {

	if err := validate.Required("lease"+"."+"budgetNotificationEmails", "body", o.BudgetNotificationEmails); err != nil {
		return err
	}

	return nil
}

func (o *PostLeasesBody) validatePrincipalID(formats strfmt.Registry) error {

	if err := validate.Required("lease"+"."+"principalId", "body", o.PrincipalID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostLeasesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLeasesBody) UnmarshalBinary(b []byte) error {
	var res PostLeasesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
