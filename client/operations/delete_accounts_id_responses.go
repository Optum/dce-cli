// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteAccountsIDReader is a Reader for the DeleteAccountsID structure.
type DeleteAccountsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAccountsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteAccountsIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteAccountsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAccountsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteAccountsIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAccountsIDNoContent creates a DeleteAccountsIDNoContent with default headers values
func NewDeleteAccountsIDNoContent() *DeleteAccountsIDNoContent {
	return &DeleteAccountsIDNoContent{}
}

/*DeleteAccountsIDNoContent handles this case with default header values.

The account has been successfully deleted.
*/
type DeleteAccountsIDNoContent struct {
	AccessControlAllowHeaders string

	AccessControlAllowMethods string

	AccessControlAllowOrigin string
}

func (o *DeleteAccountsIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{id}][%d] deleteAccountsIdNoContent ", 204)
}

func (o *DeleteAccountsIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Access-Control-Allow-Headers
	o.AccessControlAllowHeaders = response.GetHeader("Access-Control-Allow-Headers")

	// response header Access-Control-Allow-Methods
	o.AccessControlAllowMethods = response.GetHeader("Access-Control-Allow-Methods")

	// response header Access-Control-Allow-Origin
	o.AccessControlAllowOrigin = response.GetHeader("Access-Control-Allow-Origin")

	return nil
}

// NewDeleteAccountsIDForbidden creates a DeleteAccountsIDForbidden with default headers values
func NewDeleteAccountsIDForbidden() *DeleteAccountsIDForbidden {
	return &DeleteAccountsIDForbidden{}
}

/*DeleteAccountsIDForbidden handles this case with default header values.

Unauthorized.
*/
type DeleteAccountsIDForbidden struct {
}

func (o *DeleteAccountsIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{id}][%d] deleteAccountsIdForbidden ", 403)
}

func (o *DeleteAccountsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAccountsIDNotFound creates a DeleteAccountsIDNotFound with default headers values
func NewDeleteAccountsIDNotFound() *DeleteAccountsIDNotFound {
	return &DeleteAccountsIDNotFound{}
}

/*DeleteAccountsIDNotFound handles this case with default header values.

No account found for the given ID.
*/
type DeleteAccountsIDNotFound struct {
}

func (o *DeleteAccountsIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{id}][%d] deleteAccountsIdNotFound ", 404)
}

func (o *DeleteAccountsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAccountsIDConflict creates a DeleteAccountsIDConflict with default headers values
func NewDeleteAccountsIDConflict() *DeleteAccountsIDConflict {
	return &DeleteAccountsIDConflict{}
}

/*DeleteAccountsIDConflict handles this case with default header values.

The account is unable to be deleted.
*/
type DeleteAccountsIDConflict struct {
}

func (o *DeleteAccountsIDConflict) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{id}][%d] deleteAccountsIdConflict ", 409)
}

func (o *DeleteAccountsIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
