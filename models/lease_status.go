// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LeaseStatus Status of the Lease.
// "Active": The principal is leased and has access to the account
// "Inactive": The lease has become inactive, either through expiring, exceeding budget, or by request.
//
// swagger:model leaseStatus
type LeaseStatus string

const (

	// LeaseStatusActive captures enum value "Active"
	LeaseStatusActive LeaseStatus = "Active"

	// LeaseStatusInactive captures enum value "Inactive"
	LeaseStatusInactive LeaseStatus = "Inactive"
)

// for schema
var leaseStatusEnum []interface{}

func init() {
	var res []LeaseStatus
	if err := json.Unmarshal([]byte(`["Active","Inactive"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		leaseStatusEnum = append(leaseStatusEnum, v)
	}
}

func (m LeaseStatus) validateLeaseStatusEnum(path, location string, value LeaseStatus) error {
	if err := validate.Enum(path, location, value, leaseStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lease status
func (m LeaseStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLeaseStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
